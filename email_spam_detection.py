# -*- coding: utf-8 -*-
"""email spam detection.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1JqVhornY38xSXCxadtdocfGqNBFrf4rs
"""

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

df = pd.read_csv('/content/mail_data.csv')

print(df)

data = df.where((pd.notnull(df)),'')

data.head()

data.info()
data.shape

data.loc[data['Category']=='spam','Category',]=0
data.loc[data['Category']=='ham','Category',]=1

x = data['Message']
y = data['Category']

print(x)

print(y)

x_test , x_train , y_test , y_train = train_test_split(x,y, test_size=0.2, random_state = 3)

print(x.shape)
print(x_train.shape)
print(x_test.shape)

print(y.shape)
print(y_train.shape)
print(y_test.shape)

feature_extraction = TfidfVectorizer(min_df=1, stop_words='english',lowercase = True)

x_train_features = feature_extraction.fit_transform(x_train)
x_test_features = feature_extraction.transform(x_test)

y_train = y_train.astype('int')
y_test = y_test.astype('int')

print(x_train)

print(x_train_features)

model = LogisticRegression()

model.fit(x_train_features,y_train)

prediction_on_training_data = model.predict(x_train_features)
accuracy_on_training_data = accuracy_score(y_train,prediction_on_training_data)

print("Acc on training : ", accuracy_on_training_data)

prediction_on_test_data = model.predict(x_test_features)
accuracy_on_test_data = accuracy_score(y_test,prediction_on_test_data)

print('acc on test data :  ',accuracy_on_test_data)

input_your_mail = ['Dear User, we have detected suspicious activity on your account, and immediate verification is required to prevent suspension—please click here to verify your identity and restore access within the next 24 hours; failure to do so may result in permanent account closure.']

input_data_features = feature_extraction.transform(input_your_mail)

prediction = model.predict(input_data_feature)

print(prediction)

if(prediction[0]==1):
  print('ham mail')

else:
  print('spam mail ')

input_your_mail = [
    "Dear User, we have detected suspicious activity on your account, and immediate verification is required to prevent suspension—please click here to verify your identity and restore access within the next 24 hours; failure to do so may result in permanent account closure."
]

input_data_features = feature_extraction.transform(input_your_mail)  # Correct variable name

prediction = model.predict(input_data_features)  # Corrected variable name

print(prediction)

if prediction[0] == 1:
    print("Ham mail")  # Typically, ham is labeled as 1
else:
    print("Spam mail")  # Typically, spam is labeled as 0

